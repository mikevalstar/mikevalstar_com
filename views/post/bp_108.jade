.blogPost

	h2 
		a(href="/Blog/108/Coding_with_Node.js_Part_4_Storing_Blog_Posts") Coding with Node.js: Part 4; Storing Blog Posts.
	h5 Posted on 
		time(pubdate="2012-04-16") April 16
			sup th
			|  2012
	
	div.tc: img(src="/usrimg/node_js.png")
	
	:markdown
		_See [Coding with Node.js: Part 1; Getting started with Express.](/Blog/103/Coding_with_Node.js_Part_1_Getting_started_with_Express) for the beginning of this tutorial series._
		
		With the admin login page completed we now need a list of blog entries and a way to create and edit them. So to start lets give ourselves an admin interface for blog posts that we can later integrate into the main website.
		
		## Structuring the posts
		For the blog posts i'm going with the below structure for the posts to fit my blog.  One key column I'm adding in is the external link, this will be very useful for determining posts that are not full articles like this one but comments on something else that I would like to link to.
		
		So lets first add the structure to the database
		#### Database.js
	.gistC(id="2400899.js?file=Database.js"): script(src="https://gist.github.com/2400899.js?file=Database.js")
	:markdown
		### Listing your posts
		Now that we have our database structure setup we'll need to setup a page to display all of the current posts and provide a link to create a new one.
		
		#### AdminPages.js
	.gistC(id="2400931.js?file=AdminPages.js"): script(src="https://gist.github.com/2400931.js?file=AdminPages.js")
	:markdown
		#### admin/postlist.jade
	.gistC(id="2400931.js?file=postlist.jade"): script(src="https://gist.github.com/2400931.js?file=postlist.jade")
	:markdown
		### Editing Post
		The first step we need to add is creating the post.  Because we want to keep an id for our posts that is short and numeric we're using the sid column to link to posts; and we need to find the maximum for the column before we start a page as seen below. 
		
		Also we need to check for when a user posts back the data in the form and apply that to the database.
		
		#### AdminPages.js
	.gistC(id="2400942.js?file=AdminPages.js"): script(src="https://gist.github.com/2400942.js?file=AdminPages.js")
	:markdown
		#### post.jade
	.gistC(id="2400942.js?file=post.jade"): script(src="https://gist.github.com/2400942.js?file=post.jade")
	:markdown
		Also note above that we set the post id to 1 when no maximum post id can be found.
		
		### Deficiencies
		* No error checking - because this is a simple uxorial.. and I'll be the only one using the software I have put 0 error checking into this demo.  if you plan on making anything like this public make sure to add in some error checking.
		* Post ID Collision - I do not currently detect a duplicate post id, this would be a good idea to add and i may do so later.
		* Look & Feel - I have made the interface very spartan for now for this demo but once again plan on making this better in the future.
		
		### Final Thoughts
		With the ability to add/edit blog posts we can now start translating all the posts into the database and be ready to switch over to a db driven blog listing.
		
		### The Code
		All code created for this website is available on the [github page](https://github.com/mikevalstar/mikevalstar_com) and this tutorial specifically is available here: [https://github.com/mikevalstar/mikevalstar\_com/tree/Node\_Tutorial\_pt4](https://github.com/mikevalstar/mikevalstar_com/tree/Node_Tutorial_pt4)
		
		### Next Time
		In the next part of this series we can show these blog posts on the front page. And later an RSS feed.
	
#disqus_identity bp_108
#disqus_permalink
	a(href="http://mikevalstar.com/Blog/108/Coding_with_Node.js_Part_4_Storing_Blog_Posts") http://mikevalstar.com/Blog/108/Coding_with_Node.js_Part_4_Storing_Blog_Posts
#disqus_thread

script(type="text/javascript").
	/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
	var disqus_shortname = 'mikevalstar'; // required: replace example with your forum shortname
	disqus_identifier = $('#disqus_identity').html();
	disqus_url = $('#disqus_permalink a').attr('href');
	
	/* * * DON'T EDIT BELOW THIS LINE * * */
	(function() {
		var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
	})();

noscript Please enable JavaScript to view the 
	a(href="http://disqus.com/?ref_noscript") comments powered by Disqus.
a.dsq-brlink(href="http://disqus.com")blog comments powered by 
	span.logo-disqus Disqus
